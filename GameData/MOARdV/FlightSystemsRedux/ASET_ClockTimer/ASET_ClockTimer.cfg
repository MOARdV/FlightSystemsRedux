PROP
{
  name = ASET_ClockTimer

// CLOCK ============================================================================


	MODULE
	{
		name = JSIVariableAnimator
		refreshRate = 10
		
// Kerbin or Earth time scale --------ISONKERBINTIME -----------------------------------------------	

// Kerbin time
	
		VARIABLESET	
		{		
			controlledTransform  = EarthScaleObj
			localTranslationStart = 0,0,0 
			localTranslationEnd   = 0,-0.001,0
			variableName = ISONKERBINTIME
			scale = 0,1
		}
		
// Earth time
	
		VARIABLESET	
		{		
			controlledTransform  = KerbinClockScaleObj
			localTranslationStart = 0,0,0 
			localTranslationEnd   = 0,-0.001,0
			variableName = ISONKERBINTIME
			scale = 1,0
		}		

// Hands animation
		
// Hours hand

		VARIABLESET
		{
			scale = 0,86400
			variableName = SELECT_CLOCKHOURSVALUE  
			controlledTransform = Hours_arrowObj
			localRotationStart = 0,0,0
			localRotationEnd = 0,720,0
			longPath = yes
		}

// Clock Minutes hand

		VARIABLESET
		{
			scale = 0,86400
			variableName = TIMEOFDAYSECS  
			controlledTransform = Minutes_arrowObj
			localRotationStart = 0,0,0
			localRotationEnd = 0,8640,0
			longPath = yes
		}
		
// Timer Minutes hand

		VARIABLESET
		{
			scale = 0,86400
			variableName = SELECT_TIMER_TIME  
			controlledTransform = TimerArrowMinObj
			localRotationStart = 0,0,0
			localRotationEnd = 0,8640,0
			longPath = yes
		}	

// Timer start flag

		VARIABLESET
		{
			controlledTransform = TimerON_flagObj
			variableName = PERSISTENT_TIMERSTATE  
			scale = 0.5,1.5
			threshold = 0.4,0.6
			localTranslationStart = 0,0,0 
			localTranslationEnd   = 0,0,0.005
		}		

// backlight ------------------------------------------------------------------------


		VARIABLESET	
		{		
			coloredObject = MainScaleObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = EarthScaleObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = KerbinClockScaleObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = Labels_and_TimerScaleObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = TimerButtonLabelObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = Hours_arrowObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = Minutes_arrowObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = Seconds_arrowObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = TimerArrowSecObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		VARIABLESET	
		{
			coloredObject = TimerArrowMinObj
			passiveColor = 0,0,0,255
			activeColor = 180,180,180,255
			variableName = CUSTOM_ALCOR_BACKLIGHT_ON
			scale = 0,1
			threshold = 0.1,1.1
		}
		
		
		
	}	
// Seconds hands animation -----------------------------------

	MODULE
	{
		name = JSIVariableAnimator
		refreshRate = 1
		
// clock seconds
	
		VARIABLESET
		{
			scale = 0,86400
			variableName = TIMEOFDAYSECS  
			controlledTransform = Seconds_arrowObj
			localRotationStart = 0,0,0
			localRotationEnd = 0,518400,0
			longPath = yes
		}
		
// timer seconds
	
		VARIABLESET
		{
			scale = 0,86400
			variableName = SELECT_TIMER_TIME  
			controlledTransform = TimerArrowSecObj
			localRotationStart = 0,0,0
			localRotationEnd = 0,518400,0
			longPath = yes
		}
		
		
	}
// TIMER ============================================================================

// button input ---------------------------------------------------------------------
  
MODULE
{
    name = JSINumericInput
    perPodPersistenceName = TimerButtonNumber
	
    defaultValue = 0
    stepSize = 1
    minValue = 0
    maxValue = 2
    reverse = false

    loopInput = true

    USERINPUTSET
    {
		switchTransform = StartColl
		increment = 1
		animationName = TimerButtonPushAnim
		switchSound = ASET/ASET_Props/Sounds/AnalogTimerButton
		switchSoundVolume = 0.5
    }
	USERINPUTSET
    {
		switchTransform = StopColl
		increment = 1
		animationName = TimerButtonPushAnim
		switchSound = ASET/ASET_Props/Sounds/AnalogTimerButton
		switchSoundVolume = 0.5
    }
	USERINPUTSET
    {
		switchTransform = ResetColl
		increment = 1
		animationName = TimerButtonPushAnim
		switchSound = ASET/ASET_Props/Sounds/AnalogTimerButton
		switchSoundVolume = 0.5
    }
}

// colliders animation ---------------------------------------------------------------------
	
	MODULE
	{
		name = JSIVariableAnimator
		animationName = TestTimerButton
		variableName = PERSISTENT_TimerButtonNumber
		scale = 0,2
		refreshRate = 5
	}
	
// Timer control -------------------------------------------------------------------------

// START 

	MODULE
	{
		name = JSIActionGroupSwitch
		switchTransform = StartColl
		actionName = transfer
		perPodPersistenceName = TIMERSTATE
		switchGroupIdentifier = 1
		switchSound = 
		
		TRANSFERACTION
		{
			getVariable = UTSECS
			perPodPersistenceName = TIMERSTARTTIME
			//stateVariable = PERSISTENT_START_TIMER
		}
	}
	
// STOP 

	MODULE
	{
		name = JSIActionGroupSwitch
		switchTransform = StopColl
		actionName = transfer
		perPodPersistenceName = TIMERSTATE
		switchGroupIdentifier = 2
		switchSound =  
		
		TRANSFERACTION
		{
			getVariable = MATH_TIMERCOUNT
			perPodPersistenceName = STORED_TIMER_TIME
			//stateVariable = PERSISTENT_START_TIMER
		}
	}
	
// RESET 

	MODULE
	{
		name = JSIActionGroupSwitch
		switchTransform = ResetColl
		actionName = transfer
		perPodPersistenceName = TIMERSTATE
		switchGroupIdentifier = 0
		switchSound =  
		
		TRANSFERACTION
		{
			getVariable = UTSECS
			perPodPersistenceName = TIMERSTARTTIME
			//stateVariable = PERSISTENT_START_TIMER
		}
	}	

}
