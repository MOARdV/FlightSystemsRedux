PROP
{
   name = MOARdV.LEDAltimeter
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }

	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/altimeter.txt
			//button = button_STBY
			default = yes
		}	
	}
}


PROP
{
   name = MOARdV.LEDApoapsis
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/apoapsis.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
   name = MOARdV.LEDMissionTime
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/missiontime.txt
			//button = button_STBY
			default = yes
		}	
	}
}
PROP
{
	name = MOARdV.LEDNextApsisTime
	MODEL
	{
		model = MOARdV/FlightSystemsRedux/NumericDisplay/model
	}
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/apsistime.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
	// FDD - Flight Director Distance
	name = MOARdV.LEDNodedV
	MODEL
	{
		model = MOARdV/FlightSystemsRedux/NumericDisplay/model
	}
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 5                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 80               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			//button = button_STBY
			default = yes
			PAGEHANDLER
			{
				name = JSIVariablePageTextSwitcher
				method = ShowPage
				pageActiveMethod = PageActive
				
				definitionOut = MOARdV/FlightSystemsRedux/NumericDisplay/fdd0_stby.txt
				refreshRate = 10
				PAGE_DEFINITION
				{
					variableName = PERSISTENT_MOARdV_FDNMODE
					range = 0.5, 1.5
					page = MOARdV/FlightSystemsRedux/NumericDisplay/fdd1_nodedv.txt
				}
				PAGE_DEFINITION
				{
					variableName = PERSISTENT_MOARdV_FDNMODE
					range = 1.5, 2.5
					page = MOARdV/FlightSystemsRedux/NumericDisplay/fdd2_tgtdst.txt
				}
				PAGE_DEFINITION
				{
					variableName = PERSISTENT_MOARdV_FDNMODE
					range = 2.5, 3.5
					page = MOARdV/FlightSystemsRedux/NumericDisplay/fdd0_stby.txt
				}
			}
		}	
	}
}

PROP
{
	// FDT (Flight Director Timer)
	name = MOARdV.LEDNodeTime
	MODEL
	{
		model = MOARdV/FlightSystemsRedux/NumericDisplay/model
	}
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			//text = MOARdV/FlightSystemsRedux/NumericDisplay/nodetime.txt
			//button = button_STBY
			default = yes
			PAGEHANDLER
			{
				name = JSIVariablePageTextSwitcher
				method = ShowPage
				pageActiveMethod = PageActive
				
				definitionOut = MOARdV/FlightSystemsRedux/NumericDisplay/fdt0_stby.txt
				refreshRate = 10
				PAGE_DEFINITION
				{
					variableName = PERSISTENT_MOARdV_FDNMODE
					range = 0.5, 1.5
					page = MOARdV/FlightSystemsRedux/NumericDisplay/fdt1_nodetime.txt
				}
				PAGE_DEFINITION
				{
					variableName = PERSISTENT_MOARdV_FDNMODE
					range = 1.5, 2.5
					page = MOARdV/FlightSystemsRedux/NumericDisplay/fdt2_tgttime.txt
				}
				PAGE_DEFINITION
				{
					variableName = PERSISTENT_MOARdV_FDNMODE
					range = 2.5, 3.5
					page = MOARdV/FlightSystemsRedux/NumericDisplay/fdt0_stby.txt
				}
			}
		}
	}
}

PROP
{
   name = MOARdV.LEDPeriapsis
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/periapsis.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
	name = MOARdV.LEDSpeed
	MODEL
	{
		model = MOARdV/FlightSystemsRedux/NumericDisplay/model
	}
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 5                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 80               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/speed.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
   name = MOARdV.LEDTime
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 8                       // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 128               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/time.txt
			//button = button_STBY
			default = yes
		}	
	}
}
