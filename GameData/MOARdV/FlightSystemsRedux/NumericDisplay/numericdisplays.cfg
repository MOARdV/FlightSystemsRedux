PROP
{
   name = MOARdV.LEDAltimeter
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }

	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/altimeter.txt
			//button = button_STBY
			default = yes
		}	
	}
}


PROP
{
   name = MOARdV.LEDApoapsis
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/apoapsis.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
   name = MOARdV.LEDMissionTime
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/missiontime.txt
			//button = button_STBY
			default = yes
		}	
	}
}
PROP
{
	name = MOARdV.LEDNextApsisTime
	MODEL
	{
		model = MOARdV/FlightSystemsRedux/NumericDisplay/model
	}
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/apsistime.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
	name = MOARdV.LEDNodedV
	MODEL
	{
		model = MOARdV/FlightSystemsRedux/NumericDisplay/model
	}
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 5                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 80               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/nodedv.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
	name = MOARdV.LEDNodeTime
	MODEL
	{
		model = MOARdV/FlightSystemsRedux/NumericDisplay/model
	}
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/nodetime.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
   name = MOARdV.LEDPeriapsis
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 10                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 160               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/periapsis.txt
			//button = button_STBY
			default = yes
		}	
	}
}

PROP
{
   name = MOARdV.LEDSpeed
   MODEL
   {
      model = MOARdV/FlightSystemsRedux/NumericDisplay/model
   }
	MODULE
	{
		name = RasterPropMonitor
		screenTransform = DATAmonitor04Screen 
		fontTransform = MOARdV/FlightSystemsRedux/NumericDisplay/led
		textureLayerID = _Emissive            // Name of texture layer to work with on the screen surface.
		screenWidth = 5                      // Screen width in letters.
		screenHeight = 1                     // Screen height in lines.
		screenPixelWidth = 80               // Width of the generated screen texture in pixels.
		screenPixelHeight = 32               // Height of the generated screen texture in pixels.
		fontLetterWidth = 16                  // Width of a font character.
		fontLetterHeight = 32                 // Height of a font character.
		cameraAspect = 1.0
		fontDefinition = JSI/RasterPropMonitor/Library/Fonts/fontDefinition.txt
		
		// We can have as many extra fonts as we like.
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/extraFont1
		//extraFont = JSI/RasterPropMonitor/Library/Fonts/hudfont
		
		refreshDrawRate = 5
		refreshTextRate = 5
		// And we compute the more complicated data once every twenty frames
		refreshDataRate = 5
		
		buttonClickSound = JSI/RasterPropMonitor/Library/Sounds/buttonbeep
		buttonClickVolume = 0.06
		//globalButtons = button_UP,button_DOWN,button_ENTER,button_ESC,button_HOME,button_RIGHT,button_LEFT,buttonR9,buttonR10
		// On this particular model, R10 is marked prev, R9 marked next.

	// --------------------Page On/Off	----------------------------------------

		PAGE
		{
			name = powerOff
			text = MOARdV/FlightSystemsRedux/NumericDisplay/speed.txt
			//button = button_STBY
			default = yes
		}	
	}
}
